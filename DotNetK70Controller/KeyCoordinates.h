#pragma once
#include <map>
#include <string>
#include <utility>

/*std::map<std::string, std::pair<int, int> > KeynumMap =
{
	{ "ESC", std::make_pair(0, 1) }, { "F1", std::make_pair(6, 1) }, { "F2", std::make_pair(10, 1) }, { "F3", std::make_pair(14, 1) }, { "F4", std::make_pair(18, 1) }, { "F5", std::make_pair(25, 1) }, { "F6", std::make_pair(29, 1) }, { "F7", std::make_pair(33, 1) }, { "F8", std::make_pair(37, 1) }, { "F9", std::make_pair(44, 1) }, { "F10", std::make_pair(48, 1) }, { "F11", std::make_pair(52, 1) }, { "F12", std::make_pair(56, 1) }, { "PRTSCN", std::make_pair(62, 1) }, { "SCRLOCK", std::make_pair(66, 1) }, { "PAUSE", std::make_pair(70, 1) }, { "STOP", std::make_pair(76, 1) }, { "REWIND", std::make_pair(80, 1) }, { "PLAY", std::make_pair(84, 1) }, { "FORWARD", std::make_pair(88, 1) },
	{ "TILDE", std::make_pair(0, 2) }, { "1", std::make_pair(4, 2) }, { "2", std::make_pair(8, 2) }, { "3", std::make_pair(12, 2) }, { "4", std::make_pair(16, 2) }, { "5", std::make_pair(20, 2) }, { "6", std::make_pair(24, 2) }, { "7", std::make_pair(28, 2) }, { "8", std::make_pair(32, 2) }, { "9", std::make_pair(36, 2) }, { "0", std::make_pair(40, 2) }, { "MINUS", std::make_pair(44, 2) }, { "PLUS", std::make_pair(48, 2) }, { "BKSPC", std::make_pair(52, 2) }, { "INSERT", std::make_pair(62, 2) }, { "HOME", std::make_pair(66, 2) }, { "PGUP", std::make_pair(70, 2) }, { "NUMLOCK", std::make_pair(76, 2) }, { "NUMSLASH", std::make_pair(80, 2) }, { "ASTERISK", std::make_pair(84, 2) }, { "NUMMINUS", std::make_pair(88, 2) },
	{ "TAB", std::make_pair(0, 3) }, { "Q", std::make_pair(6, 3) }, { "W", std::make_pair(10, 3) }, { "E", std::make_pair(14, 3) }, { "R", std::make_pair(18, 3) }, { "T", std::make_pair(22, 3) }, { "Y", std::make_pair(26, 3) }, { "U", std::make_pair(30, 3) }, { "I", std::make_pair(34, 3) }, { "O", std::make_pair(38, 3) }, { "P", std::make_pair(42, 3) }, { "LCBRACKET", std::make_pair(46, 3) }, { "RCBRACKET", std::make_pair(50, 3) }, { "ENTER", std::make_pair(54, 3) }, { "DELETE", std::make_pair(62, 3) }, { "END", std::make_pair(66, 3) }, { "PGDWN", std::make_pair(70, 3) }, { "NUM7", std::make_pair(76, 3) }, { "NUM8", std::make_pair(80, 3) }, { "NUM9", std::make_pair(84, 3) }, { "NUMPLUS", std::make_pair(88, 3) },
	{ "CAPSLOCK", std::make_pair(0, 4) }, { "A", std::make_pair(7, 4) }, { "S", std::make_pair(11, 4) }, { "D", std::make_pair(15, 4) }, { "F", std::make_pair(19, 4) }, { "G", std::make_pair(23, 4) }, { "H", std::make_pair(27, 4) }, { "J", std::make_pair(31, 4) }, { "K", std::make_pair(35, 4) }, { "L", std::make_pair(39, 4) }, { "COLON", std::make_pair(43, 4) }, { "AT", std::make_pair(47, 4) }, { "GRAVE", std::make_pair(51, 1) }, { "NUM4", std::make_pair(76, 4) }, { "NUM5", std::make_pair(80, 4) }, { "NUM6", std::make_pair(84, 4) },
	{ "LSHIFT", std::make_pair(0, 5) }, { "BSLASH", std::make_pair(5, 5) }, { "Z", std::make_pair(9, 5) }, { "X", std::make_pair(13, 5) }, { "C", std::make_pair(17, 1) }, { "V", std::make_pair(21, 5) }, { "B", std::make_pair(25, 5) }, { "N", std::make_pair(29, 5) }, { "M", std::make_pair(33, 5) }, { "COMMA", std::make_pair(37, 5) }, { "DOT", std::make_pair(41, 5) }, { "FSLASh", std::make_pair(45, 5) }, { "RSHIFT", std::make_pair(49, 5) }, { "UARROW", std::make_pair(66, 6) }, { "NUM1", std::make_pair(76, 5) }, { "NUM2", std::make_pair(80, 5) }, { "NUM3", std::make_pair(84, 5) }, { "NUMENTER", std::make_pair(88, 5) },
	{ "LCTRL", std::make_pair(0, 6) }, { "LWIN", std::make_pair(6, 6) }, { "LALT", std::make_pair(10, 6) }, { "SPACE", std::make_pair(15, 6) }, { "RALT", std::make_pair(41, 6) }, { "RWIN", std::make_pair(46, 6) }, { "MENU", std::make_pair(50, 6) }, { "RCTRL", std::make_pair(54, 6) }, { "LARROW", std::make_pair(62, 6) }, { "DARROW", std::make_pair(66, 6) }, { "RARROW", std::make_pair(70, 6) }, { "NUM0", std::make_pair(76, 6) }, { "NUMDOT", std::make_pair(84, 6) },
};*/


std::map<int, std::pair<int, int> > KeynumMap =
{
	{ VK_ESCAPE, std::make_pair(0, 1) },	{ VK_F1, std::make_pair(6, 1) },	{ VK_F2, std::make_pair(10, 1) },	{ VK_F3, std::make_pair(14, 1) },		{ VK_F4, std::make_pair(18, 1) },	{ VK_F5, std::make_pair(25, 1) },	{ VK_F6, std::make_pair(29, 1) },	{ VK_F7, std::make_pair(33, 1) },		{ VK_F8, std::make_pair(37, 1) },	{ VK_F9, std::make_pair(44, 1) },			{ VK_F10, std::make_pair(48, 1) },			{ VK_F11, std::make_pair(52, 1) },		{ VK_F12, std::make_pair(56, 1) },		{ VK_SNAPSHOT, std::make_pair(62, 1) }, { VK_SCROLL, std::make_pair(66, 1) },	{ VK_PAUSE, std::make_pair(70, 1) },	{ VK_MEDIA_STOP, std::make_pair(76, 1) },	{ VK_MEDIA_PREV_TRACK, std::make_pair(80, 1) }, { VK_MEDIA_PLAY_PAUSE, std::make_pair(84, 1) }, { VK_MEDIA_NEXT_TRACK, std::make_pair(88, 1) },
	{ 0xDF, std::make_pair(0, 2) },			{ '1', std::make_pair(4, 2) },		{ '2', std::make_pair(8, 2) },		{ '3', std::make_pair(12, 2) },			{ '4', std::make_pair(16, 2) },		{ '5', std::make_pair(20, 2) },		{ '6', std::make_pair(24, 2) },		{ '7', std::make_pair(28, 2) },			{ '8', std::make_pair(32, 2) },		{ '9', std::make_pair(36, 2) },				{ '0', std::make_pair(40, 2) },				{ 0xBD, std::make_pair(44, 2) },		{ 0xBB, std::make_pair(48, 2) },		{ VK_BACK, std::make_pair(52, 2) },		{ VK_INSERT, std::make_pair(62, 2) },	{ VK_HOME, std::make_pair(66, 2) },		{ VK_PRIOR, std::make_pair(70, 2) },		{ VK_NUMLOCK, std::make_pair(76, 2) }, { VK_DIVIDE, std::make_pair(80, 2) }, { VK_MULTIPLY, std::make_pair(84, 2) }, { VK_SUBTRACT, std::make_pair(88, 2) },
	{ VK_TAB, std::make_pair(0, 3) },		{ 'Q', std::make_pair(6, 3) },		{ 'W', std::make_pair(10, 3) },		{ 'E', std::make_pair(14, 3) },			{ 'R', std::make_pair(18, 3) },		{ 'T', std::make_pair(22, 3) },		{ 'Y', std::make_pair(26, 3) },		{ 'U', std::make_pair(30, 3) },			{ 'I', std::make_pair(34, 3) },		{ 'O', std::make_pair(38, 3) },				{ 'P', std::make_pair(42, 3) },				{ VK_OEM_4, std::make_pair(46, 3) },	{ VK_OEM_6, std::make_pair(50, 3) },	{ VK_RETURN , std::make_pair(54, 3) },	{ VK_DELETE, std::make_pair(62, 3) },	{ VK_END, std::make_pair(66, 3) },		{ VK_NEXT , std::make_pair(70, 3) },		{ VK_NUMPAD7, std::make_pair(76, 3) }, { VK_NUMPAD8, std::make_pair(80, 3) }, { VK_NUMPAD9, std::make_pair(84, 3) }, { VK_ADD, std::make_pair(88, 3) },
	{ VK_CAPITAL, std::make_pair(0, 4) },	{ 'A', std::make_pair(7, 4) },		{ 'S', std::make_pair(11, 4) },		{ 'D', std::make_pair(15, 4) },			{ 'F', std::make_pair(19, 4) },		{ 'G', std::make_pair(23, 4) },		{ 'H', std::make_pair(27, 4) },		{ 'J', std::make_pair(31, 4) },			{ 'K', std::make_pair(35, 4) },		{ 'L', std::make_pair(39, 4) },				{ VK_OEM_1, std::make_pair(43, 4) },		{ VK_OEM_3, std::make_pair(47, 4) },	{ 0xDE, std::make_pair(51, 4) },		{ VK_NUMPAD4 , std::make_pair(76, 4) }, { VK_NUMPAD5, std::make_pair(80, 4) },	{ VK_NUMPAD6, std::make_pair(84, 4) },
	{ VK_LSHIFT, std::make_pair(0, 5) },	{ VK_OEM_5, std::make_pair(5, 5) }, { 'Z', std::make_pair(9, 5) },		{ 'X', std::make_pair(13, 5) },			{ 'C', std::make_pair(17, 5) },		{ 'V', std::make_pair(21, 5) },		{ 'B', std::make_pair(25, 5) },		{ 'N', std::make_pair(29, 5) },			{ 'M', std::make_pair(33, 5) },		{ VK_OEM_COMMA , std::make_pair(37, 5) },	{ VK_OEM_PERIOD, std::make_pair(41, 5) },	{ VK_OEM_2, std::make_pair(45, 5) },	{ VK_RSHIFT , std::make_pair(49, 5) },	{ VK_UP, std::make_pair(66, 5) },		{ VK_NUMPAD1, std::make_pair(76, 5) },	{ VK_NUMPAD2, std::make_pair(80, 5) },	{ VK_NUMPAD3, std::make_pair(84, 5) },	/*{ "NUMENTER", std::make_pair(88, 5) },*/
	{ VK_LCONTROL, std::make_pair(0, 6) },	{ VK_LWIN, std::make_pair(6, 6) },	{ 0xA4, std::make_pair(10, 6) },	{ VK_SPACE, std::make_pair(15, 6) },/*{ 0xA5, std::make_pair(41, 6) },*/	{ VK_RWIN, std::make_pair(46, 6) }, { VK_APPS, std::make_pair(50, 6) }, { VK_RCONTROL, std::make_pair(54, 6) },	{ VK_LEFT, std::make_pair(62, 6) }, { VK_DOWN, std::make_pair(66, 6) },			{ VK_RIGHT, std::make_pair(70, 6) },		{ 0x60 , std::make_pair(76, 6) },		{ 0x6E, std::make_pair(84, 6) },
};

